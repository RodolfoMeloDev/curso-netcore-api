// <auto-generated />
using System;
using Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Api.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220615220006_Uf_Municipio_Cep")]
    partial class Uf_Municipio_Cep
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Api.Domain.Entities.CepEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<Guid>("MunicipioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Numero")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Cep");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Cep");
                });

            modelBuilder.Entity("Api.Domain.Entities.MunicipioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CodIBGE")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<Guid>("UfId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CodIBGE")
                        .IsUnique();

                    b.HasIndex("UfId");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("Api.Domain.Entities.UfEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("character varying(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Sigla")
                        .IsUnique();

                    b.ToTable("Uf");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3288e581-e757-4eb8-9733-cbb70d55a0eb"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4167),
                            Nome = "Acre",
                            Sigla = "AC"
                        },
                        new
                        {
                            Id = new Guid("ea42922a-b199-4f55-849f-1c0de46be666"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4204),
                            Nome = "Alagoas",
                            Sigla = "AL"
                        },
                        new
                        {
                            Id = new Guid("331dfce2-9ebb-4e0f-996f-c57c02ad166f"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4206),
                            Nome = "Amapá",
                            Sigla = "AP"
                        },
                        new
                        {
                            Id = new Guid("0de15f83-0e35-4d21-9bae-d4ca40fa4c95"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4208),
                            Nome = "Amazonas",
                            Sigla = "AM"
                        },
                        new
                        {
                            Id = new Guid("a3bb6218-35fb-488d-a424-799a474d6eee"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4209),
                            Nome = "Bahia",
                            Sigla = "BA"
                        },
                        new
                        {
                            Id = new Guid("bb0f8cb5-4c7f-4fc7-9a6f-0065f00f4301"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4211),
                            Nome = "Ceara",
                            Sigla = "CE"
                        },
                        new
                        {
                            Id = new Guid("246b07ac-f2de-442f-833d-b3846df15762"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4212),
                            Nome = "Distrito Federal",
                            Sigla = "DF"
                        },
                        new
                        {
                            Id = new Guid("19547a13-0d11-4228-91be-eacd3d9db48e"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4218),
                            Nome = "Espírito Santo",
                            Sigla = "ES"
                        },
                        new
                        {
                            Id = new Guid("7dd11d6b-c8d0-476c-b1ad-748dadf96a30"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4219),
                            Nome = "Goiás",
                            Sigla = "GO"
                        },
                        new
                        {
                            Id = new Guid("00a4a51c-f313-46f1-9259-9dd13e5fc75f"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4221),
                            Nome = "Maranhão",
                            Sigla = "MA"
                        },
                        new
                        {
                            Id = new Guid("957b661e-ebfa-4abb-8797-40be5b071bae"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4222),
                            Nome = "Mato Grosso",
                            Sigla = "MT"
                        },
                        new
                        {
                            Id = new Guid("a14c6830-c68b-41da-a9a2-2ccd353f2b92"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4223),
                            Nome = "Mato Grosso do Sul",
                            Sigla = "MS"
                        },
                        new
                        {
                            Id = new Guid("2e7ccd9c-3d30-4f38-a60b-372ccfce48a5"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4225),
                            Nome = "Minas Gerais",
                            Sigla = "MG"
                        },
                        new
                        {
                            Id = new Guid("d927e748-2adb-40ca-84f6-fc71ce2b13e9"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4226),
                            Nome = "Pará",
                            Sigla = "PA"
                        },
                        new
                        {
                            Id = new Guid("c6219f8b-eaf2-4deb-817d-1006dc327657"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4227),
                            Nome = "Paraíba",
                            Sigla = "PB"
                        },
                        new
                        {
                            Id = new Guid("e2bfd56b-239e-41b3-bc12-4267971b28de"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4231),
                            Nome = "Paraná",
                            Sigla = "PR"
                        },
                        new
                        {
                            Id = new Guid("c67a06cb-3a94-4269-a27f-94d60b02a696"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4232),
                            Nome = "Pernambuco",
                            Sigla = "PE"
                        },
                        new
                        {
                            Id = new Guid("40cf97e6-9b8e-463e-9f3f-c71fca2268dd"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4234),
                            Nome = "Piauí",
                            Sigla = "PI"
                        },
                        new
                        {
                            Id = new Guid("3dccb54e-3849-4031-a263-651bc735af99"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4235),
                            Nome = "Rio de Janeiro",
                            Sigla = "RJ"
                        },
                        new
                        {
                            Id = new Guid("1baf28b2-1226-4667-ac65-285a0eec7700"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4236),
                            Nome = "Rio Grande do Norte",
                            Sigla = "RN"
                        },
                        new
                        {
                            Id = new Guid("e2f51d32-b690-4605-a3c8-933eac54a0c6"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4237),
                            Nome = "Rio Grande do Sul",
                            Sigla = "RS"
                        },
                        new
                        {
                            Id = new Guid("43206e20-fb64-4d67-96ae-df791565c62b"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4239),
                            Nome = "Rondônia",
                            Sigla = "RO"
                        },
                        new
                        {
                            Id = new Guid("62c6a60b-dad1-4ba3-8c77-58f123d11698"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4240),
                            Nome = "Roraima",
                            Sigla = "RR"
                        },
                        new
                        {
                            Id = new Guid("32951f32-4525-4792-a56e-8c33c58d3c29"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4243),
                            Nome = "Santa Catarina",
                            Sigla = "SC"
                        },
                        new
                        {
                            Id = new Guid("716321b8-2d7e-4a74-ab1f-b2d677ac4e45"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4244),
                            Nome = "São Paulo",
                            Sigla = "SP"
                        },
                        new
                        {
                            Id = new Guid("c9a717c5-5867-4214-b805-c6602dac8015"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4246),
                            Nome = "Sergipe",
                            Sigla = "SE"
                        },
                        new
                        {
                            Id = new Guid("29596d6d-df1a-45cb-824b-2472bffbebc7"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 271, DateTimeKind.Utc).AddTicks(4247),
                            Nome = "STocantins",
                            Sigla = "TO"
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4fab99be-2508-4f67-b2e6-3f8bc891da71"),
                            CreateAt = new DateTime(2022, 6, 15, 22, 0, 6, 269, DateTimeKind.Utc).AddTicks(5421),
                            Email = "admin@mail.com",
                            Name = "Administrador"
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.CepEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.MunicipioEntity", "Municipio")
                        .WithMany("Ceps")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Domain.Entities.MunicipioEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.UfEntity", "Uf")
                        .WithMany("Municipios")
                        .HasForeignKey("UfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
